{
  "name": "cache",
  "devDependencies": {
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.5.2",
    "@types/supertest": "^6.0.3",
    "@types/winston": "^2.4.4",
    "gts": "^6.0.2",
    "jest": "^30.1.3",
    "npm-run-all": "^4.1.5",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.4",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2"
  },
  "version": "1.0.0",
  "description": "This project is the implementation of a distributed cache like Redis or memcached. It has a very simple API that allow users to add, remove and list keys and their values as in a key value store. There is no authentication as this is outside of the scope of this project. The API is documented at `docs/openapi.yaml`.",
  "main": "index.js",
  "directories": {
    "doc": "docs"
  },
  "dependencies": {
    "express": "^5.1.0",
    "winston": "^3.17.0"
  },
  "scripts": {
    "test": "jest",
    "build": "tsc",
    "start": "npm-run-all --parallel start:node0 start:node1 start:node2",
    "start:node0": "NODE_ID=node0 PORT=3000 NODES=node0:3000,node1:3001,node2:3002 WRITE_QUORUM=2 READ_QUORUM=2 REPLICATION=3 ts-node src/main.ts",
    "start:node1": "NODE_ID=node1 PORT=3001 NODES=node0:3000,node1:3001,node2:3002 WRITE_QUORUM=2 READ_QUORUM=2 REPLICATION=3 ts-node src/main.ts",
    "start:node2": "NODE_ID=node2 PORT=3002 NODES=node0:3000,node1:3001,node2:3002 WRITE_QUORUM=2 READ_QUORUM=2 REPLICATION=3 ts-node src/main.ts"
  },
  "keywords": [],
  "author": "Gian Ortiz",
  "license": "MIT"
}
